document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('formDispositivo');

    form.addEventListener('submit', function (event) {
        event.preventDefault(); // ‚ùå Evita recargar la p√°gina

        // üîç Obtenemos los valores del formulario
        const tipo = document.getElementById('TipoDispositivo').value;
        const otroTipo = document.querySelector('input[name="OtroTipoDispositivo"]')?.value.trim() || "";
        const marca = document.querySelector('input[name="MarcaDispositivo"]').value.trim();
        const idFuncionario = document.querySelector('input[name="IdFuncionario"]').value.trim();
        const idVisitante = document.querySelector('input[name="IdVisitante"]').value.trim();

        // üß© Expresiones regulares para validar texto y n√∫meros
        const regexTexto = /^[a-zA-Z0-9\s.,-]*$/;
        const regexNumero = /^\d+$/;

        // ‚úÖ Validaci√≥n de tipo de dispositivo
        if (tipo === "") {
            alert('‚ùå Error: Debe seleccionar un tipo de dispositivo.');
            return;
        }

        if (tipo === "Otro" && (otroTipo === "" || !regexTexto.test(otroTipo))) {
            alert('‚ùå Error: Debe especificar un tipo v√°lido en "Otro".');
            return;
        }

        // ‚úÖ Validaci√≥n de marca
        if (!regexTexto.test(marca) || marca === "") {
            alert('‚ùå Error: El campo Marca solo puede contener letras, n√∫meros, espacios y algunos s√≠mbolos (.,-).');
            return;
        }

        // ‚úÖ Validaci√≥n de IDs (solo uno debe estar lleno)
        if ((idFuncionario === "" && idVisitante === "") || (idFuncionario !== "" && idVisitante !== "")) {
            alert('‚ùå Error: Debe ingresar solo un ID: Funcionario o Visitante.');
            return;
        }

        if (idFuncionario !== "" && !regexNumero.test(idFuncionario)) {
            alert('‚ùå Error: El campo ID Funcionario solo puede contener n√∫meros.');
            return;
        }

        if (idVisitante !== "" && !regexNumero.test(idVisitante)) {
            alert('‚ùå Error: El campo ID Visitante solo puede contener n√∫meros.');
            return;
        }

        // üß† Preparamos los datos para enviar al controlador
        const formData = new FormData(form);

        // Si eligi√≥ "Otro", reemplazamos el tipo por el valor del campo
        if (tipo === "Otro") {
            formData.set("TipoDispositivo", otroTipo);
        }

        // Acci√≥n que el backend usar√° para decidir qu√© hacer
        formData.append("accion", "registrar");

        // üöÄ Enviamos con AJAX (fetch)
        fetch('../../Controller/parqueadero_dispositivo/ControladorDispositivo.php', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            console.log("‚úÖ Respuesta del servidor:", data);

            if (data.success) {
                alert(data.message); // ‚úÖ √âxito
                form.reset(); // Limpia el formulario
                document.getElementById("campoOtro").style.display = "none";
            } else {
                alert(`‚ö†Ô∏è ${data.message}`);
            }
        })
        .catch(error => {
            console.error('‚ùå Error al conectar con el servidor:', error);
            alert('‚ùå Hubo un error al conectar con el servidor. Verifica la ruta o la conexi√≥n.');
        });
    });

    // üéõÔ∏è Mostrar/Ocultar campo "Otro"
    document.getElementById("TipoDispositivo").addEventListener("change", function() {
        document.getElementById("campoOtro").style.display = this.value === "Otro" ? "block" : "none";
    });
});
